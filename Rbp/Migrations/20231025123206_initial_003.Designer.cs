// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TraceyDawley.Models;

#nullable disable

namespace TraceyDawley.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231025123206_initial_003")]
    partial class initial_003
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TraceyDawley.Models.ContentFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(355)
                        .HasColumnType("nvarchar(355)");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(355)
                        .HasColumnType("nvarchar(355)");

                    b.Property<double?>("FileSize")
                        .HasColumnType("float");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UploadedBy")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ContentFile");
                });

            modelBuilder.Entity("TraceyDawley.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(355)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("encEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contact = "00000000000",
                            CreatedAt = new DateTime(2023, 10, 25, 17, 32, 6, 157, DateTimeKind.Local).AddTicks(4019),
                            Email = "superadmin@gmail.com",
                            FirstName = "Super",
                            IsActive = 1,
                            LastName = "Admin",
                            MiddleName = "",
                            Password = "123",
                            Role = 0,
                            UserId = new Guid("a59f1fa5-f51b-4d05-ad27-3ddaeaaf49bf")
                        },
                        new
                        {
                            Id = 2,
                            Contact = "00000000000",
                            CreatedAt = new DateTime(2023, 10, 25, 17, 32, 6, 157, DateTimeKind.Local).AddTicks(4044),
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            IsActive = 1,
                            LastName = "",
                            MiddleName = "",
                            Password = "123",
                            Role = 1,
                            UserId = new Guid("199f84be-2212-4e10-80e9-638ea07be12e")
                        });
                });

            modelBuilder.Entity("TraceyDawley.Models.SurveyResponseData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Question2")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Question3")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Question4")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Question5")
                        .HasColumnType("nvarchar(355)");

                    b.Property<string>("Question6")
                        .HasColumnType("nvarchar(355)");

                    b.Property<string>("Question7")
                        .HasColumnType("nvarchar(355)");

                    b.Property<string>("Question8")
                        .HasColumnType("nvarchar(355)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SurveyResponseData");
                });

            modelBuilder.Entity("TraceyDawley.Models.ContentFile", b =>
                {
                    b.HasOne("TraceyDawley.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
